//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Assmnts;
using Data.Abstract;
using NLog;

namespace Data.Concrete
{
  public partial class CachedAttachType : def_AttachType
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _AttachTypeId;
  	private string _AttachDescription;
  	private System.DateTime _CreatedDate;
  	private int _CreatedBy;
  
  	public CachedAttachType() : base(true) { }
  
  	public CachedAttachType(IAttachType c) : base(true) {
  		if (c != null) {
  			_AttachTypeId = c.AttachTypeId;
  			_AttachDescription = c.AttachDescription;
  			_CreatedDate = c.CreatedDate;
  			_CreatedBy = c.CreatedBy;
  		}
  	}
  
  	public override int AttachTypeId {
  		get {
  			return _AttachTypeId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string AttachDescription {
  		get {
  			return _AttachDescription;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override System.DateTime CreatedDate {
  		get {
  			return _CreatedDate;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int CreatedBy {
  		get {
  			return _CreatedBy;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override ICollection<def_FileAttachment> def_FileAttachment {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedBaseType : def_BaseTypes
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private short _baseTypeId;
  	private string _enumeration;
  
  	public CachedBaseType() : base(true) { }
  
  	public CachedBaseType(IBaseType c) : base(true) {
  		if (c != null) {
  			_baseTypeId = c.baseTypeId;
  			_enumeration = c.enumeration;
  		}
  	}
  
  	public override short baseTypeId {
  		get {
  			return _baseTypeId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string enumeration {
  		get {
  			return _enumeration;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override ICollection<def_ItemVariables> def_ItemVariables {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_LookupMaster> def_LookupMaster {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedFormPart : def_FormParts
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _formPartId;
  	private int _formId;
  	private int _partId;
  	private Nullable<short> _order;
  
  	public CachedFormPart(IFormPart c) {
  		if (c != null) {
  			_formPartId = c.formPartId;
  			_formId = c.formId;
  			_partId = c.partId;
  			_order = c.order;
  		}
  	}
  
  	public override int formPartId {
  		get {
  			return _formPartId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int formId {
  		get {
  			return _formId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int partId {
  		get {
  			return _partId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override Nullable<short> order {
  		get {
  			return _order;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_Forms def_Forms {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_Parts def_Parts {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedForm : def_Forms
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _formId;
  	private string _identifier;
  	private string _title;
  	private Nullable<int> _EnterpriseID;
  
  	public CachedForm() : base(true) { }
  
  	public CachedForm(IForm c) : base(true) {
  		if (c != null) {
  			_formId = c.formId;
  			_identifier = c.identifier;
  			_title = c.title;
  			_EnterpriseID = c.EnterpriseID;
  		}
  	}
  
  	public override int formId {
  		get {
  			return _formId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string identifier {
  		get {
  			return _identifier;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string title {
  		get {
  			return _title;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override Nullable<int> EnterpriseID {
  		get {
  			return _EnterpriseID;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override ICollection<def_FormParts> def_FormParts {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_FormResults> def_FormResults {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_StatusMaster> def_StatusMaster {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_FormText> def_FormText {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedFormText : def_FormText
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _frmTextId;
  	private int _formId;
  	private int _EnterpriseID;
  	private short _langId;
  	private string _frmTitle;
  
  	public CachedFormText(IFormText c) {
  		if (c != null) {
  			_frmTextId = c.frmTextId;
  			_formId = c.formId;
  			_EnterpriseID = c.EnterpriseID;
  			_langId = c.langId;
  			_frmTitle = c.frmTitle;
  		}
  	}
  
  	public override int frmTextId {
  		get {
  			return _frmTextId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int formId {
  		get {
  			return _formId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int EnterpriseID {
  		get {
  			return _EnterpriseID;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override short langId {
  		get {
  			return _langId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string frmTitle {
  		get {
  			return _frmTitle;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_Forms def_Forms {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_Languages def_Languages {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedItem : def_Items
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _itemId;
  	private string _identifier;
  	private string _title;
  	private string _label;
  	private string _prompt;
  	private string _itemBody;
  	private short _langId;
  
  	public CachedItem() : base(true) { }
  
  	public CachedItem(IItem c) : base(true) {
  		if (c != null) {
  			_itemId = c.itemId;
  			_identifier = c.identifier;
  			_title = c.title;
  			_label = c.label;
  			_prompt = c.prompt;
  			_itemBody = c.itemBody;
  			_langId = c.langId;
  		}
  	}
  
  	public override int itemId {
  		get {
  			return _itemId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string identifier {
  		get {
  			return _identifier;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string title {
  		get {
  			return _title;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string label {
  		get {
  			return _label;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string prompt {
  		get {
  			return _prompt;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string itemBody {
  		get {
  			return _itemBody;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override short langId {
  		get {
  			return _langId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override ICollection<def_ItemResults> def_ItemResults {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_ItemVariables> def_ItemVariables {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_SectionItems> def_SectionItems {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_Languages def_Languages {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_ItemsEnt> def_ItemsEnt {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_ItemText> def_ItemText {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedItemsEnt : def_ItemsEnt
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _itemEntId;
  	private int _ent_id;
  	private int _itemId;
  	private string _identifier;
  	private string _title;
  	private string _label;
  	private string _prompt;
  	private string _itemBody;
  	private short _langId;
  
  	public CachedItemsEnt(IItemsEnt c) {
  		if (c != null) {
  			_itemEntId = c.itemEntId;
  			_ent_id = c.ent_id;
  			_itemId = c.itemId;
  			_identifier = c.identifier;
  			_title = c.title;
  			_label = c.label;
  			_prompt = c.prompt;
  			_itemBody = c.itemBody;
  			_langId = c.langId;
  		}
  	}
  
  	public override int itemEntId {
  		get {
  			return _itemEntId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int ent_id {
  		get {
  			return _ent_id;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int itemId {
  		get {
  			return _itemId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string identifier {
  		get {
  			return _identifier;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string title {
  		get {
  			return _title;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string label {
  		get {
  			return _label;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string prompt {
  		get {
  			return _prompt;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string itemBody {
  		get {
  			return _itemBody;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override short langId {
  		get {
  			return _langId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_Items def_Items {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedItemText : def_ItemText
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _itemTextId;
  	private int _itemId;
  	private int _EnterpriseID;
  	private short _langId;
  	private string _title;
  	private string _label;
  	private string _prompt;
  	private string _itemBody;
  
  	public CachedItemText(IItemText c) {
  		if (c != null) {
  			_itemTextId = c.itemTextId;
  			_itemId = c.itemId;
  			_EnterpriseID = c.EnterpriseID;
  			_langId = c.langId;
  			_title = c.title;
  			_label = c.label;
  			_prompt = c.prompt;
  			_itemBody = c.itemBody;
  		}
  	}
  
  	public override int itemTextId {
  		get {
  			return _itemTextId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int itemId {
  		get {
  			return _itemId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int EnterpriseID {
  		get {
  			return _EnterpriseID;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override short langId {
  		get {
  			return _langId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string title {
  		get {
  			return _title;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string label {
  		get {
  			return _label;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string prompt {
  		get {
  			return _prompt;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string itemBody {
  		get {
  			return _itemBody;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_Items def_Items {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_Languages def_Languages {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedItemVariable : def_ItemVariables
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _itemVariableId;
  	private int _itemId;
  	private string _identifier;
  	private short _baseTypeId;
  	private string _defaultValue;
  	private Nullable<int> _outcomeDeclarationId;
  
  	public CachedItemVariable() : base(true) { }
  
  	public CachedItemVariable(IItemVariable c) : base(true) {
  		if (c != null) {
  			_itemVariableId = c.itemVariableId;
  			_itemId = c.itemId;
  			_identifier = c.identifier;
  			_baseTypeId = c.baseTypeId;
  			_defaultValue = c.defaultValue;
  			_outcomeDeclarationId = c.outcomeDeclarationId;
  		}
  	}
  
  	public override int itemVariableId {
  		get {
  			return _itemVariableId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int itemId {
  		get {
  			return _itemId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string identifier {
  		get {
  			return _identifier;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override short baseTypeId {
  		get {
  			return _baseTypeId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string defaultValue {
  		get {
  			return _defaultValue;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override Nullable<int> outcomeDeclarationId {
  		get {
  			return _outcomeDeclarationId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_BaseTypes def_BaseTypes {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_Items def_Items {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_ResponseVariables> def_ResponseVariables {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_OutcomeDeclaration def_OutcomeDeclaration {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedLanguage : def_Languages
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private short _langId;
  	private string _languageRegion;
  	private string _title;
  
  	public CachedLanguage() : base(true) { }
  
  	public CachedLanguage(ILanguage c) : base(true) {
  		if (c != null) {
  			_langId = c.langId;
  			_languageRegion = c.languageRegion;
  			_title = c.title;
  		}
  	}
  
  	public override short langId {
  		get {
  			return _langId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string languageRegion {
  		get {
  			return _languageRegion;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string title {
  		get {
  			return _title;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override ICollection<def_Items> def_Items {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_LookupText> def_LookupText {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_StatusText> def_StatusText {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_FormText> def_FormText {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_ItemText> def_ItemText {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_PartText> def_PartText {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_SectionText> def_SectionText {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedLookupDetail : def_LookupDetail
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _lookupDetailId;
  	private int _lookupMasterId;
  	private Nullable<int> _EnterpriseID;
  	private Nullable<int> _GroupID;
  	private int _displayOrder;
  	private string _dataValue;
  	private string _StatusFlag;
  
  	public CachedLookupDetail() : base(true) { }
  
  	public CachedLookupDetail(ILookupDetail c) : base(true) {
  		if (c != null) {
  			_lookupDetailId = c.lookupDetailId;
  			_lookupMasterId = c.lookupMasterId;
  			_EnterpriseID = c.EnterpriseID;
  			_GroupID = c.GroupID;
  			_displayOrder = c.displayOrder;
  			_dataValue = c.dataValue;
  			_StatusFlag = c.StatusFlag;
  		}
  	}
  
  	public override int lookupDetailId {
  		get {
  			return _lookupDetailId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int lookupMasterId {
  		get {
  			return _lookupMasterId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override Nullable<int> EnterpriseID {
  		get {
  			return _EnterpriseID;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override Nullable<int> GroupID {
  		get {
  			return _GroupID;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int displayOrder {
  		get {
  			return _displayOrder;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string dataValue {
  		get {
  			return _dataValue;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string StatusFlag {
  		get {
  			return _StatusFlag;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_LookupMaster def_LookupMaster {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_LookupText> def_LookupText {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedLookupMaster : def_LookupMaster
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _lookupMasterId;
  	private string _lookupCode;
  	private string _title;
  	private short _baseTypeId;
  
  	public CachedLookupMaster() : base(true) { }
  
  	public CachedLookupMaster(ILookupMaster c) : base(true) {
  		if (c != null) {
  			_lookupMasterId = c.lookupMasterId;
  			_lookupCode = c.lookupCode;
  			_title = c.title;
  			_baseTypeId = c.baseTypeId;
  		}
  	}
  
  	public override int lookupMasterId {
  		get {
  			return _lookupMasterId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string lookupCode {
  		get {
  			return _lookupCode;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string title {
  		get {
  			return _title;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override short baseTypeId {
  		get {
  			return _baseTypeId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_BaseTypes def_BaseTypes {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_LookupDetail> def_LookupDetail {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedLookupText : def_LookupText
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _lookupTextId;
  	private int _lookupDetailId;
  	private short _langId;
  	private string _displayText;
  
  	public CachedLookupText(ILookupText c) {
  		if (c != null) {
  			_lookupTextId = c.lookupTextId;
  			_lookupDetailId = c.lookupDetailId;
  			_langId = c.langId;
  			_displayText = c.displayText;
  		}
  	}
  
  	public override int lookupTextId {
  		get {
  			return _lookupTextId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int lookupDetailId {
  		get {
  			return _lookupDetailId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override short langId {
  		get {
  			return _langId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string displayText {
  		get {
  			return _displayText;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_Languages def_Languages {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_LookupDetail def_LookupDetail {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedPart : def_Parts
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _partId;
  	private string _identifier;
  	private Nullable<int> _branchRuleId;
  	private string _title;
  
  	public CachedPart() : base(true) { }
  
  	public CachedPart(IPart c) : base(true) {
  		if (c != null) {
  			_partId = c.partId;
  			_identifier = c.identifier;
  			_branchRuleId = c.branchRuleId;
  			_title = c.title;
  		}
  	}
  
  	public override int partId {
  		get {
  			return _partId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string identifier {
  		get {
  			return _identifier;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override Nullable<int> branchRuleId {
  		get {
  			return _branchRuleId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string title {
  		get {
  			return _title;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_BranchRules def_BranchRules {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_FormParts> def_FormParts {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_PartSections> def_PartSections {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_PartText> def_PartText {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedPartSection : def_PartSections
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _partSectionId;
  	private int _partId;
  	private int _sectionId;
  	private Nullable<short> _order;
  	private Nullable<bool> _visible;
  
  	public CachedPartSection() : base(true) { }
  
  	public CachedPartSection(IPartSection c) : base(true) {
  		if (c != null) {
  			_partSectionId = c.partSectionId;
  			_partId = c.partId;
  			_sectionId = c.sectionId;
  			_order = c.order;
  			_visible = c.visible;
  		}
  	}
  
  	public override int partSectionId {
  		get {
  			return _partSectionId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int partId {
  		get {
  			return _partId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int sectionId {
  		get {
  			return _sectionId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override Nullable<short> order {
  		get {
  			return _order;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override Nullable<bool> visible {
  		get {
  			return _visible;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_Parts def_Parts {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_Sections def_Sections {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_PartSectionsEnt> def_PartSectionsEnt {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_PartSectionsEnt> def_PartSectionsEnt1 {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedPartSectionsEnt : def_PartSectionsEnt
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _partSectionEntId;
  	private int _partSectionId;
  	private int _entPartSectionId;
  	private int _EnterpriseID;
  	private bool _visible;
  
  	public CachedPartSectionsEnt(IPartSectionsEnt c) {
  		if (c != null) {
  			_partSectionEntId = c.partSectionEntId;
  			_partSectionId = c.partSectionId;
  			_entPartSectionId = c.entPartSectionId;
  			_EnterpriseID = c.EnterpriseID;
  			_visible = c.visible;
  		}
  	}
  
  	public override int partSectionEntId {
  		get {
  			return _partSectionEntId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int partSectionId {
  		get {
  			return _partSectionId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int entPartSectionId {
  		get {
  			return _entPartSectionId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int EnterpriseID {
  		get {
  			return _EnterpriseID;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override bool visible {
  		get {
  			return _visible;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_PartSections def_PartSections {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_PartSections def_PartSections1 {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedPartText : def_PartText
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _prtTextId;
  	private int _partId;
  	private int _EnterpriseID;
  	private short _langId;
  	private string _prtTitle;
  
  	public CachedPartText(IPartText c) {
  		if (c != null) {
  			_prtTextId = c.prtTextId;
  			_partId = c.partId;
  			_EnterpriseID = c.EnterpriseID;
  			_langId = c.langId;
  			_prtTitle = c.prtTitle;
  		}
  	}
  
  	public override int prtTextId {
  		get {
  			return _prtTextId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int partId {
  		get {
  			return _partId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int EnterpriseID {
  		get {
  			return _EnterpriseID;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override short langId {
  		get {
  			return _langId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string prtTitle {
  		get {
  			return _prtTitle;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_Languages def_Languages {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_Parts def_Parts {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedSectionItem : def_SectionItems
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _sectionItemId;
  	private int _sectionId;
  	private int _itemId;
  	private Nullable<int> _subSectionId;
  	private Nullable<short> _order;
  	private int _validation;
  	private bool _display;
  	private bool _readOnly;
  	private bool _requiredSection;
  	private bool _requiredForm;
  
  	public CachedSectionItem() : base(true) { }
  
  	public CachedSectionItem(ISectionItem c) : base(true) {
  		if (c != null) {
  			_sectionItemId = c.sectionItemId;
  			_sectionId = c.sectionId;
  			_itemId = c.itemId;
  			_subSectionId = c.subSectionId;
  			_order = c.order;
  			_validation = c.validation;
  			_display = c.display;
  			_readOnly = c.readOnly;
  			_requiredSection = c.requiredSection;
  			_requiredForm = c.requiredForm;
  		}
  	}
  
  	public override int sectionItemId {
  		get {
  			return _sectionItemId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int sectionId {
  		get {
  			return _sectionId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int itemId {
  		get {
  			return _itemId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override Nullable<int> subSectionId {
  		get {
  			return _subSectionId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override Nullable<short> order {
  		get {
  			return _order;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int validation {
  		get {
  			return _validation;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override bool display {
  		get {
  			return _display;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override bool readOnly {
  		get {
  			return _readOnly;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override bool requiredSection {
  		get {
  			return _requiredSection;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override bool requiredForm {
  		get {
  			return _requiredForm;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_Items def_Items {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_SectionItemsEnt> def_SectionItemsEnt {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_Sections def_Sections {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_SubSections def_SubSections {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedSectionItemsEnt : def_SectionItemsEnt
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _sectionItemEntId;
  	private int _sectionItemId;
  	private int _validation;
  	private bool _display;
  	private bool _readOnly;
  	private bool _requiredSection;
  	private bool _requiredForm;
  	private int _EnterpriseID;
  
  	public CachedSectionItemsEnt(ISectionItemsEnt c) {
  		if (c != null) {
  			_sectionItemEntId = c.sectionItemEntId;
  			_sectionItemId = c.sectionItemId;
  			_validation = c.validation;
  			_display = c.display;
  			_readOnly = c.readOnly;
  			_requiredSection = c.requiredSection;
  			_requiredForm = c.requiredForm;
  			_EnterpriseID = c.EnterpriseID;
  		}
  	}
  
  	public override int sectionItemEntId {
  		get {
  			return _sectionItemEntId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int sectionItemId {
  		get {
  			return _sectionItemId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int validation {
  		get {
  			return _validation;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override bool display {
  		get {
  			return _display;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override bool readOnly {
  		get {
  			return _readOnly;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override bool requiredSection {
  		get {
  			return _requiredSection;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override bool requiredForm {
  		get {
  			return _requiredForm;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int EnterpriseID {
  		get {
  			return _EnterpriseID;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_SectionItems def_SectionItems {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedSection : def_Sections
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _sectionId;
  	private string _identifier;
  	private string _title;
  	private bool _visible;
  	private string _href;
  	private Nullable<int> _branchRuleId;
  	private string _rubricBlock;
  	private bool _multipleItemsPerPage;
  
  	public CachedSection() : base(true) { }
  
  	public CachedSection(ISection c) : base(true) {
  		if (c != null) {
  			_sectionId = c.sectionId;
  			_identifier = c.identifier;
  			_title = c.title;
  			_visible = c.visible;
  			_href = c.href;
  			_branchRuleId = c.branchRuleId;
  			_rubricBlock = c.rubricBlock;
  			_multipleItemsPerPage = c.multipleItemsPerPage;
  		}
  	}
  
  	public override int sectionId {
  		get {
  			return _sectionId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string identifier {
  		get {
  			return _identifier;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string title {
  		get {
  			return _title;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override bool visible {
  		get {
  			return _visible;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string href {
  		get {
  			return _href;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override Nullable<int> branchRuleId {
  		get {
  			return _branchRuleId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string rubricBlock {
  		get {
  			return _rubricBlock;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override bool multipleItemsPerPage {
  		get {
  			return _multipleItemsPerPage;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_BranchRules def_BranchRules {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_PartSections> def_PartSections {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_SectionItems> def_SectionItems {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_SubSections> def_SubSections {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override ICollection<def_SectionText> def_SectionText {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedSectionText : def_SectionText
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _sctnTextId;
  	private int _sectionId;
  	private int _EnterpriseID;
  	private short _langId;
  	private string _sctnTitle;
  
  	public CachedSectionText(ISectionText c) {
  		if (c != null) {
  			_sctnTextId = c.sctnTextId;
  			_sectionId = c.sectionId;
  			_EnterpriseID = c.EnterpriseID;
  			_langId = c.langId;
  			_sctnTitle = c.sctnTitle;
  		}
  	}
  
  	public override int sctnTextId {
  		get {
  			return _sctnTextId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int sectionId {
  		get {
  			return _sectionId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int EnterpriseID {
  		get {
  			return _EnterpriseID;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override short langId {
  		get {
  			return _langId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override string sctnTitle {
  		get {
  			return _sctnTitle;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override def_Languages def_Languages {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_Sections def_Sections {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
  public partial class CachedSubSection : def_SubSections
  {
  	private ILogger mLogger = LogManager.GetCurrentClassLogger();
  	private int _subSectionId;
  	private int _sectionId;
  
  	public CachedSubSection() : base(true) { }
  
  	public CachedSubSection(ISubSection c) : base(true) {
  		if (c != null) {
  			_subSectionId = c.subSectionId;
  			_sectionId = c.sectionId;
  		}
  	}
  
  	public override int subSectionId {
  		get {
  			return _subSectionId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override int sectionId {
  		get {
  			return _sectionId;
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.SET_PROPERTY_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.SET_PROPERTY_EXCEPTION_MESSAGE);
  		}
  	}
  
  	public override ICollection<def_SectionItems> def_SectionItems {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  	public override def_Sections def_Sections {
  		get {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}
  		set {
  			mLogger.Error(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  			throw new InvalidOperationException(CachedFormsEntities.NAVIGATION_PROPERTY_ACCESS_LOG_MESSAGE);
  		}	
  	}
  
  }
  
}
